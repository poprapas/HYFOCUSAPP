apply plugin: "com.android.application"

import com.android.build.OutputFile

project.ext.react = [
    entryFile: "index.js",
    enableHermes: false,  // clean and rebuild if changing
]

apply from: "../../node_modules/react-native/react.gradle"
apply from: "../../node_modules/react-native-vector-icons/fonts.gradle"
def enableSeparateBuildPerCPUArchitecture = false
def enableProguardInReleaseBuilds = false
def jscFlavor = 'org.webkit:android-jsc:+'
def enableHermes = project.ext.react.get("enableHermes", false);

android {
    compileSdkVersion rootProject.ext.compileSdkVersion      

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    defaultConfig {
        applicationId "hya.dev.hatyaifocusapp"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 2
        versionName "1.0.1"
        ndk {
            abiFilters "armeabi-v7a", "x86", "arm64-v8a", "x86_64"
        }
        multiDexEnabled true
    }
    signingConfigs {
        debug {
            storeFile file('debug.keystore')
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }
        release {
            storeFile file(HYA_HATYAIFOCUS_RELEASE_STORE_FILE)
            storePassword HYA_HATYAIFOCUS_RELEASE_STORE_PASSWORD
            keyAlias HYA_HATYAIFOCUS_RELEASE_KEY_ALIAS
            keyPassword HYA_HATYAIFOCUS_RELEASE_KEY_PASSWORD
        }
    }
    splits {
        abi {
            reset()
            enable enableSeparateBuildPerCPUArchitecture
            universalApk false  // If true, also generate a universal APK
            include "armeabi-v7a", "x86", "arm64-v8a", "x86_64"
        }
    }
    buildTypes {
        debug {
            signingConfig signingConfigs.debug
        }
        release {
            signingConfig signingConfigs.release
            minifyEnabled enableProguardInReleaseBuilds
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
        }
    }
    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            // For each separate APK per architecture, set a unique version code as described here:
            // http://tools.android.com/tech-docs/new-build-system/user-guide/apk-splits
            def versionCodes = ["armeabi-v7a": 1, "x86": 2, "arm64-v8a": 3, "x86_64": 4]
            def abi = output.getFilter(OutputFile.ABI)
            if (abi != null) {  // null for the universal-debug, universal-release variants
                output.versionCodeOverride =
                        versionCodes.get(abi) * 1048576 + defaultConfig.versionCode
            }
        }
    }
}

dependencies {
    // implementation project(':react-native-webview')
    // implementation project(':@react-native-community_async-storage')
    // implementation project(':react-native-gesture-handler')
    // implementation(project(":react-native-device-info"),  {
    //     exclude group: "com.google.android.gms"
    // })
    // implementation project(':react-native-push-notification')
    // implementation "com.google.android.gms:play-services-gcm:16.0.0"
    // implementation(project(':react-native-maps')){
    //    exclude group: 'com.google.android.gms', module: 'play-services-base'
    //    exclude group: 'com.google.android.gms', module: 'play-services-maps'
    // }
    // implementation 'com.google.android.gms:play-services-base:16.+'
    // implementation 'com.google.android.gms:play-services-maps:16.+'

    // implementation project(':react-native-vector-icons')
    // implementation project(':react-native-splash-screen')
    implementation fileTree(dir: "libs", include: ["*.jar"])
    // implementation "com.android.support:appcompat-v7:28.+"
    // implementation 'com.android.support:design:28.+'
    // implementation 'com.android.support:support-v4:28.+'
    implementation "com.facebook.react:react-native:+"  // From node_modules
    // implementation 'com.facebook.fresco:fresco:1.13.0'
    // implementation 'com.facebook.fresco:animated-gif:1.13.0'
    // implementation 'com.android.support:multidex:1.0.3'

    if (enableHermes) {
        def hermesPath = "../../node_modules/hermes-engine/android/";
        debugImplementation files(hermesPath + "hermes-debug.aar")
        releaseImplementation files(hermesPath + "hermes-release.aar")
    } 
    else {
        implementation jscFlavor
    }
}

// Run this once to be able to run the application with BUCK
// puts all compile dependencies into folder libs for BUCK to use
task copyDownloadableDepsToLibs(type: Copy) {
    from configurations.compile
    into 'libs'
}

apply from: file("../../node_modules/@react-native-community/cli-platform-android/native_modules.gradle"); applyNativeModulesAppBuildGradle(project)